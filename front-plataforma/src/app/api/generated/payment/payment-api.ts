/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable
} from '@angular/core';

import {
  Observable
} from 'rxjs';

import type {
  PaymentRequestDTO,
  PaymentSuccessResponse
} from './modelp';

type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class OpenAPIDefinitionService {
  constructor(
    private http: HttpClient,
  ) {}/**
 * Recebe os dados de pagamento do frontend, processa a transa√ß√£o e notifica o servi√ßo de usu√°rio.
 * @summary Processa uma nova assinatura
 */
 processPayment<TData = PaymentSuccessResponse>(
    paymentRequestDTO: PaymentRequestDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    processPayment<TData = PaymentSuccessResponse>(
    paymentRequestDTO: PaymentRequestDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    processPayment<TData = PaymentSuccessResponse>(
    paymentRequestDTO: PaymentRequestDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;processPayment<TData = PaymentSuccessResponse>(
    paymentRequestDTO: PaymentRequestDTO, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `http://localhost:8080/payments/process`,
      paymentRequestDTO,options
    );
  }

/**
 * Calcula e retorna a receita total gerada no √∫ltimo m√™s.
 * @summary Obt√©m a receita mensal total
 */
 getMonthlyRevenue<TData = number>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getMonthlyRevenue<TData = number>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getMonthlyRevenue<TData = number>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getMonthlyRevenue<TData = number>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/payments/monthly-revenue`,options
    );
  }

};

export type ProcessPaymentClientResult = NonNullable<PaymentSuccessResponse>
export type GetMonthlyRevenueClientResult = NonNullable<number>
